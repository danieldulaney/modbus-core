// This is just some data for testing, so it's OK if it's unused
#![allow(dead_code)]
#![allow(non_snake_case)]

use crate::protocols::TcpModbusHeader;
use crate::Direction;

// Frame 58925 from modbus.pcap
pub const ADU1_TCP: &[u8] = &[
    0x4b, 0xcc, 0x00, 0x00, 0x00, 0xcb, 0xff, 0x03, 0xc8, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x3c, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00,
];

pub const ADU1_DIRECTION: Direction = Direction::Response;
pub const ADU1_HEADER: TcpModbusHeader = TcpModbusHeader {
    transaction_id: 19404,
    protocol_id: 0,
    length: 203,
    unit_id: 255,
};
pub const ADU1_ADU_LENGTH: usize = 209;
pub const ADU1_FUNC_CODE: u8 = 3;

pub fn ADU1_PDU() -> &'static [u8] {
    &ADU1_TCP[7..]
}

// Frame 60157 from modbus.pcap
pub const ADU2_TCP: &[u8] = &[
    0x4d, 0x5e, 0x00, 0x00, 0x00, 0x06, 0xff, 0x04, 0x00, 0x00, 0x00, 0x64,
];

pub const ADU2_DIRECTION: Direction = Direction::Query;
pub const ADU2_HEADER: TcpModbusHeader = TcpModbusHeader {
    transaction_id: 19806,
    protocol_id: 0,
    length: 6,
    unit_id: 255,
};
pub const ADU2_ADU_LENGTH: usize = 12;
pub const ADU2_FUNC_CODE: u8 = 4;

pub fn ADU2_PDU() -> &'static [u8] {
    &ADU2_TCP[7..]
}
